{
  "swagger": "2.0",
  "info": {
    "description": "This is a User Game Server (Challenge 5)",
    "version": "1.0.0",
    "title": "Challenge 5 Documentation",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:3000",
  "basePath": "/api",
  "tags": [
    {
      "name": "auth",
      "description": "Register and login"
    },
    {
      "name": "user game",
      "description": "Access to User Game",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "user game biodata",
      "description": "Access to User Game Biodata"
    },
    {
      "name": "user game history",
      "description": "Access to User Game History"
    }
  ],
  "schemes": ["http"],
  "security": [
    {
      "api_key": []
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "tags": ["auth"],
        "summary": "Register a new user",
        "description": "",
        "operationId": "registerUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Register User Object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGame"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User registered successfully",
            "schema": {
              "$ref": "#/definitions/UserGame"
            }
          },
          "400": {
            "description": "Invalid user supplied"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["auth"],
        "summary": "Login a registered user",
        "description": "",
        "operationId": "loginUser",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Login User Object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGame"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "schema": {
              "$ref": "#/definitions/UserGame"
            }
          },
          "400": {
            "description": "Invalid user supplied"
          }
        }
      }
    },
    "/create-user-games": {
      "post": {
        "tags": ["user game"],
        "summary": "Create user game",
        "description": "",
        "operationId": "addUserGame",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User game object that needs to be added to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGame"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/update-user-games/{id}": {
      "put": {
        "tags": ["user game"],
        "summary": "Update an existing User Games",
        "description": "",
        "operationId": "updateUserGames",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user game to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "User game object that needs to be added to the Database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserGame"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID user game"
          },
          "404": {
            "description": "user game not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/get-user-games/{id_user}": {
      "get": {
        "tags": ["user game"],
        "summary": "Finds User Game by ID",
        "operationId": "findsUserGamesById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of user game to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserGame"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/get-user-games": {
      "get": {
        "tags": ["user game"],
        "summary": "Finds All User Game",
        "operationId": "findsUserGames",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful Get All User Games",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserGame"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/delete-user-games/{id}": {
      "delete": {
        "tags": ["user game"],
        "summary": "Delete User Game",
        "description": "",
        "operationId": "deleteUserGames",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id_user",
            "in": "path",
            "description": "ID of user game to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful Delete User Games"
          },
          "400": {
            "description": "Invalid status value"
          },
          "404": {
            "description": "user game not found"
          }
        }
      }
    },

    "/create-user-biodata": {
      "post": {
        "tags": ["user game biodata"],
        "summary": "Create user game biodata",
        "description": "",
        "operationId": "addUserBiodata",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User Biodata object that needs to be added to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserBiodata"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },

    "/update-user-biodata/{id_biodata}": {
      "put": {
        "tags": ["user game biodata"],
        "summary": "Update an existing User Biodata",
        "description": "",
        "operationId": "updateUserBiodata",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id_biodata",
            "in": "path",
            "description": "ID of user game to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "User Biodata object that needs to be added to the Database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserBiodata"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID user biodata"
          },
          "404": {
            "description": "user biodata not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },

    "/get-user-biodata/{id_biodata}": {
      "get": {
        "tags": ["user game biodata"],
        "summary": "Finds User Biodata by ID",
        "operationId": "findsUserBiodatasById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id_biodata",
            "in": "path",
            "description": "ID of user biodata to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserBiodata"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/get-user-biodata": {
      "get": {
        "tags": ["user game biodata"],
        "summary": "Finds All User Game Biodata",
        "operationId": "findsUserBiodata",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful Get All User Biodata",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserBiodata"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/delete-user-biodata/{id_biodata}": {
      "delete": {
        "tags": ["user game biodata"],
        "summary": "Delete User Game Biodata",
        "description": "",
        "operationId": "deleteUserBiodata",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id_biodata",
            "in": "path",
            "description": "ID of user game biodata to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful Delete User Biodata"
          },
          "400": {
            "description": "Invalid status value"
          },
          "404": {
            "description": "user game not found"
          }
        }
      }
    },

    "/create-user-history": {
      "post": {
        "tags": ["user game history"],
        "summary": "Create user game history",
        "description": "",
        "operationId": "addUserHistory",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User History object that needs to be added to the database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserHistory"
            }
          }
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },

    "/update-user-history/{id_history}": {
      "put": {
        "tags": ["user game history"],
        "summary": "Update an existing User History",
        "description": "",
        "operationId": "updateUserHistory",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id_history",
            "in": "path",
            "description": "ID of user history to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "body",
            "description": "User History object that needs to be added to the Database",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserHistory"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID user History"
          },
          "404": {
            "description": "user biodata not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },

    "/get-user-history/{id_history}": {
      "get": {
        "tags": ["user game history"],
        "summary": "Finds User History by ID",
        "operationId": "findsUserHistorysById",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id_history",
            "in": "path",
            "description": "ID of user History to return",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserHistory"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/get-user-history": {
      "get": {
        "tags": ["user game history"],
        "summary": "Finds All User Game History",
        "operationId": "findsUserHistory",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful Get All User History",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserHistory"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },

    "/delete-user-history/{id_history}": {
      "delete": {
        "tags": ["user game history"],
        "summary": "Delete User Game History",
        "description": "",
        "operationId": "deleteUserHistory",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id_history",
            "in": "path",
            "description": "ID of user game history to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "successful Delete User History"
          },
          "400": {
            "description": "Invalid status value"
          },
          "404": {
            "description": "user game not found"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "authorization",
      "in": "header"
    }
  },
  "definitions": {
    "UserGame": {
      "type": "object",
      "required": ["username", "password"],
      "properties": {
        "username": {
          "type": "string",
          "example": "mhmdzaky"
        },
        "password": {
          "type": "string",
          "example": "123456"
        }
      }
    },
    "UserBiodata": {
      "type": "object",
      "required": ["nama_user", "jenis_kelamin", "umur", "email", "id_user"],
      "properties": {
        "nama_user": {
          "type": "string",
          "example": "mhmdzaky"
        },
        "jenis_kelamin": {
          "type": "string",
          "example": "laki-laki"
        },
        "umur": {
          "type": "integer",
          "example": "20"
        },
        "email": {
          "type": "string",
          "example": "zaky@gmail.com"
        },
        "id_user": {
          "type": "integer",
          "example": "1"
        }
      }
    },
    "UserHistory": {
      "type": "object",
      "required": ["nama_game", "waktu_bermain", "skor_game", "id_user"],
      "properties": {
        "nama_game": {
          "type": "string",
          "example": "Valorant"
        },
        "waktu_bermain": {
          "type": "time",
          "example": "15:00:00"
        },
        "skor_game": {
          "type": "integer",
          "example": "10"
        },
        "id_user": {
          "type": "integer",
          "example": "1"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}
